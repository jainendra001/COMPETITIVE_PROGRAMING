#include <bits/stdc++.h>
using namespace std;

#define int long long
// THIS QUESTION IS PRIMARILY THE QUESTION OF PRODUCT WHERE THE SIZE OF PRODUCT IS TOO MUCH TO HANDLE , SO IN THIS QUESTION modulo M was there so start from the last and 
// take the remainder and based on that find the products.
// Function to process a single test case
void processTestCase()
{
    int n, m;
    cin >> n >> m;
    vector<int> a(n + 1), p(n + 1), ans(n + 1);
    string s;

    // Input elements of the array a
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    cin >> s;

    int l = 1, r = n, mul = 1;

    // Calculate products based on 'L' and 'R' operations
    for (int i = 0; i < n; i++)
    {
        if (s[i] == 'L')
            p[i + 1] = l++;
        else
            p[i + 1] = r--;
    }

    // Calculate products and store remainders
    for (int i = n; i >= 1; i--)
    {
        mul = (mul * a[p[i]]) % m;
        ans[i] = mul;
    }

    // Output the products
    for (int i = 1; i <= n; i++)
        cout << ans[i] << " ";
    cout << "\n";
}

signed main()
{
    int T;
    cin >> T;
    while (T--)
    {
        processTestCase(); // Process each test case
    }
    return 0;
}
